ES5

function filterOutOdds() {
  var nums = Array.prototype.slice.call(arguments);
  return nums.filter(function(num) {
    return num % 2 === 0
  });
}

ES2015

const filterOutOdds = (...nums) => nums.filter(val => val % 2 === 0)

Find Min <---------------------------

const findMin = (...nums) => Math.min(...nums)

Double And Return Args <------------------------

const doubleAndReturnArgs = (arr, ...nums) => [arr, ...nums.map(val => val *2)]

Merge Objects <---------------------

const mergeObjects = (ob1, ob2) => ({...ob1, ...ob2})

Slice and Dice <-------------------

/** remove a random element in the items array
and return a new array without that item. */

function removeRandom(items) {

}

/** Return a new array with every item in array1 and array2. */

function extend(array1, array2) {

}

/** Return a new object with all the keys and values
from obj and a new key/value pair */

function addKeyVal(obj, key, val) {

}


/** Return a new object with a key removed. */

function removeKey(obj, key) {

}


/** Combine two objects and return a new object. */

function combine(obj1, obj2) {

}


/** Return a new object with a modified key and value. */

function update(obj, key, val) {

}
